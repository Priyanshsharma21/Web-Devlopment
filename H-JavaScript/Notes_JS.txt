                                     Introduction 

0.---->Console.log 
it is used to print in console 
only we can see it not user 


1 -> js is high level ,most popular,Dynamicly typed,  oops, scripting language
used to give functionality to our website
simple to learn
biggest community
use in frontend and backend also 
good performance  

It is the same script that I write for youtube channels 
script is java script and actors are HTML elements 
java is compiled and js is interpreted 

2-> working

every browser have its js engine like crome- v8 ms-edge has chakra
whenever user access any file for the first time js comes from server to our computer 
then when user access it second time onwards it comes form chache memory  so that it woild not takwe time

once data comes from server or chache it is in form of binary 
by byte stream decoder decode it to tokens and this token send to parser 
parser  - pre and parser 
pre-parser parse nunecessry code at that time 
parser parse code that is necessary at that time 
parser generate node based on tokens and create abstract syntax tree 

js is an interpreted language so it interpreted AST and generate byte code
This is slow so byte code and type feedback send to optimizing compiler
which generate highly optimized machine code 



3-> DOM - Document Object Model 

1. Whenever we make website , structure - HTML (Document).
2. we style it (Document).
3. JS add functionality to our document 

Document - HTML 
OBJECT - HTML Elements (h1,div,p).
Model - this whole model

                        document 
                         HTML ---------> root tag
                head              body --------> child tag of root
                title             h1 -----------> child tag of body
                                  p -----------> child tag of body

using this DOM js can manupulate the HTML and add functionality to it 
                        
4-> Datatypes

So whatever data we are storing has some type called data type 
datatype are of different type - Number(1234..) , String ("Piyansh"), boolean(true false), Undefined , Null , Bigint(1234456n)


5-> variable 

var CEO_Name = "priyansh sharma"

1. var  - An container created (variable whose value can be vary)
2. name - container name as CEO_Name 
3. "priyansh sharma" - Stored in that container


CEO_Name  = "Shreyansh Sharma"

and now value change

var name = "priyansh sharma" // its upperfunction is  constructor Function()
name.length // this proves this is an object and it contain different methods like length,touppercase,tolowercase
note -> every primitive datatype is an object (immutable object)



6-> Naming Rule 

Use camelCase  - Start lower and then follow by uppercase
use underscore for space

7-> length function 
length = var.name = gives you length of string

8 -> include script in our code 
async - It is used when we want to run script imediatily and be independent

defer - If your script need to wait for other to run we use defer  

9- > Slice function 

var name = priyansh 
name.Slice(0,1) ---- > slice from 0 to 1 (not inclkuded)  upperbound - lowerbound = total character we get 

10 --> toUppercase and toLowerCase
name.toUppercase(); for uppercase and lower case for lower 

11-> operator --->  (+, - , * , / , % )
it follow same rules as mathamatics.
== used to check
=== strict check (means also datatype)
!=
!==
<=
>=

12--> inc dec operator 

var a = 5;
var b = 3;

a++ // 6
b-- // 2 

a +=b //a = a+b // 8


12 --> Functions  ---> Used to store functionality (Instructions) into contanier such that we can use it where

series of instruction writen in curly braces are called function 
Ex --> Creating Function 
    function jainKeDukan(){
        console.log(leave house);
        console.log(100s eteps tojain ke dukan);
        console.log(back to home);
    }
All the instructions are stored inside container.
Function ----> a container created 
JainKeDukan ----> name to function 
Inside curly braises ----> inside container 

------> Calling Function     

                 getjainKeDukan();

                 return all the instructions 

------------------>Parasmeterized Function-------------------------
 Now this is where we can take input in function ,
 we have variable in paramaeter whos value vary from condition to condition
we call function to perform specific task but if we wanna perform specific instruction inside function according as we need we can specify paremeter or a variable 

declearing function
function jainKeDukan(flavour){
    console.log("I want this"+ flavour+ "ice cream");
}
main{
    jainkedukan("chocolate"); // calling function 
}

---------------------return function ----> return output

function jainKeDukan(money){
    return money * 1.5;
}

function main(){
    var cost= jainkedukan(4);
}

we can declear function inside a function 
which is return function 



note ---> In string to convert number to string ---> use numbertostring();
 and to convert string to number ---> number (string name)

templates leterls --->`${variable name + varibale name} is a nice peron and his name is ${name} `


                                --Intermediate--
1----> Random number 

Math.random --> to generate random number 
create random 0-0.9 (not one)
this random is psucodo random means it repeat itself after few iterations
we can use floor to make it absolute value

use - 
--------------math.random() ---- > 0.356----------

n = n*14; ------> between 14---->12.44332342
math.floor()-------> 12













2---> 
if else elseif switch wala statement











3--->collections - array---------------
collection of similar type of elements is called array    
used to store elements of same type inside an variable and we can access it useing subscript index


var egg = [eeg1,e2,e3,e4];

var meraEgg = egg[3];

we have functions like 
arr.length ---> for array length 
arr.includes(3)--->boolean
arr.push to push element to array
arr.pop to pop 

array is also a object have key value pair called key- index , valie ["hello","id"]


methods - >

push - > add element at end 
unShift -> add at start and return new length 
popo -> delete last value and return 
shift -> remove first element and return 
change index = a[0] = 10;
indexOf("priyansh sharma") =  return index
indexOf("priyansh sharma",2) =  return index and start form 2
include("Priyansh") // return bool if true 
include("Priyansh",2) // return bool if true  start form 2


fint -> 

let we have an objet 

var channels = 
    [
        {name : "priyansh sharma",
         subscribers: 31
         },
    {
        name: " pooname cookingshala",
        subscribers : 280
    }
    ]


console.log(channel.find(function(element){

    return element.subscribers===280;
}))



Arrow function = 

console.log(channel.find((event =>{
    return element.subscribers===280;

})))



concate - >

add two arrays 
console.log(name1.concate(name2));

we can also use slice

spread -> 
var name3 = [...name1 , ... name2];



join ->
let name=['s','i','v','u'];
console.log(name.join(" "))
split - 
console.log(name.split(" "))




3----> Loop 
-----------------while loop------------

var count = 1; ------> initluze value ,  start  
while(count<=200)------>Condition  , end 
{
    console.log(count);
    count++; -----------> Increment , change
}

for and do-while same as java
for in loop -------->

note ---> use for in iteration and while in checking the state


----------------object-----------------

let animal={
    name : zebra;
    leg : 4;
}

for(let key in animal){
    console.log(key,animal[key])
}


---------------arrays------------------

let name = ['rishab','saabi];
for(let i in name){
    console.log(name[i]);
}

for-of
for(let naam of names){
    console.log(naam);
}

name.for-each(function(name,index){
    console ( name,index)
})

----------------------------------------------------

conversion - implicit and explisit 

we can convert 
number ,  strung  , boolean into each other 

string(123) = '123'
boolean (1) = true 
number("123") = 123

Note  - > compiler start form top to bottem
so ->

"number" + 1 + 5 = number15 because compiler see first string so it comvert 1 and 5 into string 
1+5+"number" = 6 number , compiler see number first it add all  